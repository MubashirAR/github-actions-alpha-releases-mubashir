name: Semantic Release


on: 
  # pull_request: 
  #   types: 
  #     - opened
  #     - reopened
  #     - synchronize
  workflow_dispatch:
  workflow_call:
    inputs:
      COMMENT_REF:
        type: string
    
# on:
#   workflow_run:
#     workflows: [cleanup]
#     types: 
#       - completed
#     branches:
#       - alpha
#       - master

jobs:
  set-pr-status:
      runs-on: ubuntu-latest
      steps:
        - name: first
          run: ${{ github }}
        - name: Set PR Context Status to Pending
          uses: gpuliyar/pr-status-action@v1.0.0
          with:
            # Repository name (Mandatory)
            repository: ${{ github.action_repository }}

            # PR Number  (Mandatory)
            pr-number: ${{ github.event.number }}

            # Name the context to use in the PR  (Mandatory)
            context: cool-context

            # State to apply (Mandatory)
            # Any of the (error | failure | pending | success) states
            state: failure

            # A short description of the status (Mandatory)
            description: This is so awesome to use a context in a PR

            # The target URL to associate with the Context Status (Optional)
            # This Github UI will link the URL (source of status) to the Context.
            target_url: https://nice-url.gpuliyar.com

          env:
            # Default Github Token
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Get PR branch
        uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch

      - name: Checkout code
        uses: actions/checkout@v3
        # with:
          # ref: ${{ steps.comment-branch.outputs.head_ref }}
          # fetch-depth: 0
          # fetch-tags: true

      - name: test
        run: git branch && echo $GITHUB_REF_NAME


      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Semantic Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMMENT_REF: ${{ steps.comment-branch.outputs.head_ref }}
          GITHUB_REF_NAME: ${{ steps.comment-branch.outputs.head_ref }}
        run: npx semantic-release
  cleanup:
    needs: release
    uses: ./.github/workflows/cleanup.yml
    with:
      min-version-to-keep: 1
