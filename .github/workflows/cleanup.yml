name: Cleanup

on: 
  workflow_dispatch:
  workflow_call:
    inputs:
      min-version-to-keep:
        type: number
        default: 0
  # push:
  #   branches:
  #     - master
#   pull_request:
#     types: 
#       closed

# on: workflow_dispatch

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Get PR branch
        uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ steps.comment-branch.outputs.head_ref }}

      - name: trst
        run: git branch
        env:
          version: '${{ github.head_ref }}'

      # - name: Get tag
      #   id: get_tag
      #   uses: oprypin/find-latest-tag@v1
      #   with:
      #     repository: ${{ github.repository }}
      #     regex: '(.*)${{ github.ref_name}}(.*)'
      #   #   tagRegex: '(.*)-eg-(.*)'  # Optional. Returns specified group text as tag name. Full tag string is returned if regex is not defined.
      #   #   tagRegexGroup: 1 # Optional. Default is 1.
      # - name: "merge branch"
      #   id: merge_branch
      #   # run: echo "{merge_branch}={$RECENT_MERGED_BRANCH_NAME}" >> $GITHUB_OUTPUT
      #   run: echo "merge_branch=$RECENT_MERGED_BRANCH_NAME" >> $GITHUB_OUTPUT && echo $GITHUB_OUTPUT && echo $RECENT_MERGED_BRANCH_NAME && echo jello
      # - name: trst
      #   run: echo ${{ steps.merge_branch.outputs.merge_branch }}

      # - uses: jay2610/delete-older-releases@1.0.0
      #   with:
      #     # repo: <owner>/<repoName> # defaults to current repo
      #     keep_latest: 0
      #     delete_tag_pattern: ${{ steps.get_tag.outputs.tag }} # defaults to ""
      #     # delete_type: 'release'
      #     # target_branch: 'master'
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - uses: ClementTsang/delete-tag-and-release@v0.3.1
      #   with:
      #     # delete_release: true # default: false
      #     tag_name: '(.*)${{ github.ref_name}}(.*)' # tag name to delete
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Set up Node.js
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: 14

      - name: Cleanup Packages
        uses: actions/delete-package-versions@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          package-name: 'github-actions-alpha-releases-mubashir'
          package-type: 'npm'
          # IGNORE anything that does NOT include the branch name (delete only ones containing the branch name)
          ignore-versions: '^(?!.*${{ github.ref_name }}).*'
          min-versions-to-keep: ${{ inputs.min-version-to-keep }}
      - name: Cleanup Tags
        uses: dev-drprasad/delete-older-releases@v0.2.1
        with:
          keep_latest: ${{ inputs.min-version-to-keep }}
          delete_tag_pattern: '${{ github.ref_name }}'
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}