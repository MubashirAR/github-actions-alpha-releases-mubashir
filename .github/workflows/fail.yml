name: Pre-release cleanup check

on:
  # pull_request: 
  #   types: 
  #     - opened
  #     - reopened
  #     - synchronize
  workflow_run: 
    types: requested
    branches-ignore: master
    workflows: 
      - Semantic Release

  workflow_call:  
    inputs:
      is-final: 
        type: boolean

jobs:
  prerelease-cleanup-check:
    runs-on: ubuntu-latest
    steps:
      - name: Get PR branch
        if: inputs.is-final
        uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          repository: ${{ github.repository }}
          ref: ${{ steps.comment-branch.outputs.head_ref }}

      - name: Get ref name
        id: ref-name
        run: echo "pr_ref=${{ steps.comment-branch.outputs.head_ref || github.head_ref || github.ref_name }}" >> "$GITHUB_OUTPUT"

      - name: Check ref name
        run: |
          echo 'comment: ${{ steps.comment-branch.outputs.head_ref }}'
          echo 'head_ref: ${{ github.head_ref }}'
          echo 'ref_name: ${{ github.ref_name }}'
          echo 'step: ${{ steps.ref-name.outputs.pr_ref }}'
          echo 'comment: ${{ steps.comment-branch.outputs.head_ref || github.head_ref || github.ref_name }}'

      - name: Get tag
        id: get_tag
        uses: oprypin/find-latest-tag@v1
        continue-on-error: true
        with:
          repository: ${{ github.repository }}
          regex: '(.*)${{ steps.ref-name.outputs.pr_ref }}(.*)'
 
      - name: Check prerelease cleanup
        if: ${{ steps.get_tag.outputs.tag }}
        run: |
          echo "ERROR: Run full cleanup to merge"
          echo "Found tag ${{ steps.get_tag.outputs.tag }}"
          echo "To run full cleanup, comment /cleanup on your PR"
          exit 1

      - name: Set latest commit status as ${{ job.status }}
        uses: myrotvorets/set-commit-status-action@master
        if: steps.comment-branch.outputs.head_ref
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}